NAME
    Hash::Check - TODO

SYNOPSIS
     use Hash::Check;
     tie my %hash, 'Hash::Check', {
             %parameters,
     };

SUBROUTINES
    "TIEHASH"
            TODO

    "CLEAR" TODO

    "DELETE"
            TODO

    "EXISTS"
            TODO

    "FETCH" TODO

    "FIRSTKEY"
            TODO

    "NEXTKEY"
            TODO

    "SCALAR"
            TODO

    "STORE" TODO

ERRORS
     Key '%s' doesn't exist.
     Parameter isn't hash.
     Stack isn't array.

EXAMPLE
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Hash::Check;

     # Set error type.
     $ENV{'ERROR_PURE_TYPE'} = 'Print';

     # Tied hash.
     tie my %hash, 'Hash::Check', {
             'one' => 1,
             'two' => 2,  
     };

     # Turn error "Key 'three' doesn't exist.".
     print $hash{'three'};

     # Output:
     # Hash::Check: Key 'three' doesn't exist.

DEPENDENCIES
    Error::Pure.

REPOSITORY
    <https://github.com/tupinek/Hash-Check>.

AUTHOR
    Michal Špaček skim@cpan.org

LICENSE AND COPYRIGHT
    BSD license.

VERSION
    0.01

